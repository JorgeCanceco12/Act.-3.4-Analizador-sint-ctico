
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'END EQUALS IDENTIFIER INT LBRACE LPAREN PLUS PRINT RBRACE READ RPAREN SEMICOLONprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : INT IDENTIFIER SEMICOLON\n                 | READ IDENTIFIER SEMICOLON\n                 | PRINT LPAREN IDENTIFIER RPAREN SEMICOLON\n                 | IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON\n                 | LBRACE statement_list RBRACE\n                 | END SEMICOLON'
    
_lr_action_items = {'INT':([0,2,3,8,10,15,16,17,19,21,25,26,],[4,4,-3,4,-2,4,-9,-4,-5,-8,-6,-7,]),'READ':([0,2,3,8,10,15,16,17,19,21,25,26,],[6,6,-3,6,-2,6,-9,-4,-5,-8,-6,-7,]),'PRINT':([0,2,3,8,10,15,16,17,19,21,25,26,],[7,7,-3,7,-2,7,-9,-4,-5,-8,-6,-7,]),'IDENTIFIER':([0,2,3,4,6,8,10,12,14,15,16,17,19,21,22,25,26,],[5,5,-3,11,13,5,-2,18,20,5,-9,-4,-5,-8,24,-6,-7,]),'LBRACE':([0,2,3,8,10,15,16,17,19,21,25,26,],[8,8,-3,8,-2,8,-9,-4,-5,-8,-6,-7,]),'END':([0,2,3,8,10,15,16,17,19,21,25,26,],[9,9,-3,9,-2,9,-9,-4,-5,-8,-6,-7,]),'$end':([1,2,3,10,16,17,19,21,25,26,],[0,-1,-3,-2,-9,-4,-5,-8,-6,-7,]),'RBRACE':([3,10,15,16,17,19,21,25,26,],[-3,-2,21,-9,-4,-5,-8,-6,-7,]),'EQUALS':([5,],[12,]),'LPAREN':([7,],[14,]),'SEMICOLON':([9,11,13,23,24,],[16,17,19,25,26,]),'PLUS':([18,],[22,]),'RPAREN':([20,],[23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,8,],[2,15,]),'statement':([0,2,8,15,],[3,10,3,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','app.py',45),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','app.py',50),
  ('statement_list -> statement','statement_list',1,'p_statement_list','app.py',51),
  ('statement -> INT IDENTIFIER SEMICOLON','statement',3,'p_statement','app.py',59),
  ('statement -> READ IDENTIFIER SEMICOLON','statement',3,'p_statement','app.py',60),
  ('statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON','statement',5,'p_statement','app.py',61),
  ('statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON','statement',6,'p_statement','app.py',62),
  ('statement -> LBRACE statement_list RBRACE','statement',3,'p_statement','app.py',63),
  ('statement -> END SEMICOLON','statement',2,'p_statement','app.py',64),
]
