Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> INT IDENTIFIER SEMICOLON
Rule 5     statement -> READ IDENTIFIER SEMICOLON
Rule 6     statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 7     statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON
Rule 8     statement -> LBRACE statement_list RBRACE
Rule 9     statement -> END SEMICOLON

Terminals, with rules where they appear

END                  : 9
EQUALS               : 7
IDENTIFIER           : 4 5 6 7 7 7
INT                  : 4
LBRACE               : 8
LPAREN               : 6
PLUS                 : 7
PRINT                : 6
RBRACE               : 8
READ                 : 5
RPAREN               : 6
SEMICOLON            : 4 5 6 7 9
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 2 3
statement_list       : 1 2 8

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . INT IDENTIFIER SEMICOLON
    (5) statement -> . READ IDENTIFIER SEMICOLON
    (6) statement -> . PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    (7) statement -> . IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON
    (8) statement -> . LBRACE statement_list RBRACE
    (9) statement -> . END SEMICOLON

    INT             shift and go to state 4
    READ            shift and go to state 6
    PRINT           shift and go to state 7
    IDENTIFIER      shift and go to state 5
    LBRACE          shift and go to state 8
    END             shift and go to state 9

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . INT IDENTIFIER SEMICOLON
    (5) statement -> . READ IDENTIFIER SEMICOLON
    (6) statement -> . PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    (7) statement -> . IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON
    (8) statement -> . LBRACE statement_list RBRACE
    (9) statement -> . END SEMICOLON

    $end            reduce using rule 1 (program -> statement_list .)
    INT             shift and go to state 4
    READ            shift and go to state 6
    PRINT           shift and go to state 7
    IDENTIFIER      shift and go to state 5
    LBRACE          shift and go to state 8
    END             shift and go to state 9

    statement                      shift and go to state 10

state 3

    (3) statement_list -> statement .

    INT             reduce using rule 3 (statement_list -> statement .)
    READ            reduce using rule 3 (statement_list -> statement .)
    PRINT           reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement .)
    END             reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 11


state 5

    (7) statement -> IDENTIFIER . EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON

    EQUALS          shift and go to state 12


state 6

    (5) statement -> READ . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 13


state 7

    (6) statement -> PRINT . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 14


state 8

    (8) statement -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . INT IDENTIFIER SEMICOLON
    (5) statement -> . READ IDENTIFIER SEMICOLON
    (6) statement -> . PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    (7) statement -> . IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON
    (8) statement -> . LBRACE statement_list RBRACE
    (9) statement -> . END SEMICOLON

    INT             shift and go to state 4
    READ            shift and go to state 6
    PRINT           shift and go to state 7
    IDENTIFIER      shift and go to state 5
    LBRACE          shift and go to state 8
    END             shift and go to state 9

    statement_list                 shift and go to state 15
    statement                      shift and go to state 3

state 9

    (9) statement -> END . SEMICOLON

    SEMICOLON       shift and go to state 16


state 10

    (2) statement_list -> statement_list statement .

    INT             reduce using rule 2 (statement_list -> statement_list statement .)
    READ            reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    END             reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 11

    (4) statement -> INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 17


state 12

    (7) statement -> IDENTIFIER EQUALS . IDENTIFIER PLUS IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 18


state 13

    (5) statement -> READ IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 19


state 14

    (6) statement -> PRINT LPAREN . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 20


state 15

    (8) statement -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . INT IDENTIFIER SEMICOLON
    (5) statement -> . READ IDENTIFIER SEMICOLON
    (6) statement -> . PRINT LPAREN IDENTIFIER RPAREN SEMICOLON
    (7) statement -> . IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON
    (8) statement -> . LBRACE statement_list RBRACE
    (9) statement -> . END SEMICOLON

    RBRACE          shift and go to state 21
    INT             shift and go to state 4
    READ            shift and go to state 6
    PRINT           shift and go to state 7
    IDENTIFIER      shift and go to state 5
    LBRACE          shift and go to state 8
    END             shift and go to state 9

    statement                      shift and go to state 10

state 16

    (9) statement -> END SEMICOLON .

    INT             reduce using rule 9 (statement -> END SEMICOLON .)
    READ            reduce using rule 9 (statement -> END SEMICOLON .)
    PRINT           reduce using rule 9 (statement -> END SEMICOLON .)
    IDENTIFIER      reduce using rule 9 (statement -> END SEMICOLON .)
    LBRACE          reduce using rule 9 (statement -> END SEMICOLON .)
    END             reduce using rule 9 (statement -> END SEMICOLON .)
    $end            reduce using rule 9 (statement -> END SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> END SEMICOLON .)


state 17

    (4) statement -> INT IDENTIFIER SEMICOLON .

    INT             reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    END             reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    $end            reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> INT IDENTIFIER SEMICOLON .)


state 18

    (7) statement -> IDENTIFIER EQUALS IDENTIFIER . PLUS IDENTIFIER SEMICOLON

    PLUS            shift and go to state 22


state 19

    (5) statement -> READ IDENTIFIER SEMICOLON .

    INT             reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    READ            reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    END             reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    $end            reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 5 (statement -> READ IDENTIFIER SEMICOLON .)


state 20

    (6) statement -> PRINT LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 23


state 21

    (8) statement -> LBRACE statement_list RBRACE .

    INT             reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    READ            reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    END             reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 8 (statement -> LBRACE statement_list RBRACE .)


state 22

    (7) statement -> IDENTIFIER EQUALS IDENTIFIER PLUS . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 24


state 23

    (6) statement -> PRINT LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 25


state 24

    (7) statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 26


state 25

    (6) statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .

    INT             reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACE          reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    END             reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    $end            reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RBRACE          reduce using rule 6 (statement -> PRINT LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 26

    (7) statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .

    INT             reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    READ            reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    END             reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    $end            reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 7 (statement -> IDENTIFIER EQUALS IDENTIFIER PLUS IDENTIFIER SEMICOLON .)

